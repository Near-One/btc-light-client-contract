name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chain: [btc, ltc, zec]
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.chain }}-relayer
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set build args
        id: build-args
        run: |
          case "${{ matrix.chain }}" in
            btc) echo "features=" >> $GITHUB_OUTPUT ;;
            ltc) echo "features=" >> $GITHUB_OUTPUT ;;
            zec) echo "features=zcash" >> $GITHUB_OUTPUT ;;
          esac

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./relayer/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            FEATURES=${{ steps.build-args.outputs.features }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64